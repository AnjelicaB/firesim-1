# XCELIUM RTL Simulation Makefrag
#
# This makefrag stores common recipes for building RTL simulators with XCELIUM
#
# Compulsory variables:
#  All those described Makefrag-verilator
#  xcelium_wrapper_v: An additional verilog wrapper around the DUT
#  xcelium_harness: Additional C++ sources for xcelium simulation
#  CLOCK_PERIOD
#  TB := The top level module on which the stop and printf conditions are defined



xcelium_v := $(emul_v) $(xcelium_wrapper_v)
xcelium_cc := $(emul_cc) $(xcelium_harness)



XC_CXX_PREFIX=-Wcxx,
XC_LD_PREFIX=-Wld,

REMOVE_RPATH=-Wl,-rpath%

XCELIUM_CXXFLAGS = $(addprefix $(XC_CXX_PREFIX), $(CXXFLAGS))
XCELIUM_LDFLAGS = $(addprefix $(XC_LD_PREFIX), $(filter-out $(REMOVE_RPATH), $(LDFLAGS)))


xc_sim_name=$(OUT_DIR)/X$(DRIVER_NAME)
xc_sharedlib=$(OUT_DIR)/libfiresim.so
xc_workdir=$(xc_sim_name).xcelium.d
xc_run_tcl=$(xc_sim_name)_run.tcl


XCELIUM_COMMON_ARGS = \
	-64bit \
	-xmlibdirname $(xc_workdir) \
	-l /dev/null \
	-log_xmsc_run /dev/null

XCELIUM_CC_OPTS = \
	$(XCELIUM_CXXFLAGS) \
	$(XCELIUM_LDFLAGS)


#\
#   	-enable_rpath


# -Wld,-lbfd \

#    -native \

#    -cpp $(CXX) \


XCELIUM_NONCC_OPTS = \
	-fast_recompilation \
	-top $(TB) \
	-ALLOWREDEFINITION \
	-timescale 1ps/1ps \
	-define INTCNOPWR \
	-define INTC_NO_PWR_PINS \
	-define INTC_EMULATION \
	-glsperf \
	-notimingchecks \
	-delay_mode zero

#	-top $(TB) \
#    -sysc \


PREPROC_DEFINES = \
	-define XCELIUM \
	-define CLOCK_PERIOD=$(CLOCK_PERIOD) \
	-define PRINTF_COND=!$(TB).reset \
	-define STOP_COND=!$(TB).reset \
	-define MODEL=$(MODEL) \
	-define RANDOMIZE_MEM_INIT \
	-define RANDOMIZE_REG_INIT \
	-define RANDOMIZE_GARBAGE_ASSIGN \
	-define RANDOMIZE_INVALID_ASSIGN \
	-define RANDOM=32\'b0


#	-define PRINTF_COND=1 \
#	-define STOP_COND=0 \




#	-define RESET_DELAY=$(RESET_DELAY) \
XCELIUM = xrun

xcelium_flags := \
    $(XCELIUM_CC_OPTS)


#\
#	$(XCELIUM_FLAGS) \
#	-Mdir=$(GEN_DIR)/$(DRIVER_NAME)-debug.csrc \
#	-CFLAGS "$(CXXFLAGS) -D_GNU_SOURCE -DXCELIUM -I$(XCELIUM_HOME)/include -I$(GEN_DIR)" \
#	$(xcelium_flags)

################################################################################

xcelium_rtl_flags := \
	$(xcelium_flags) \
    $(XCELIUM_COMMON_ARGS) \
    $(XCELIUM_NONCC_OPTS) \
    $(PREPROC_DEFINES)



#\
#	+lint=all,noVCDE,noONGS,noUI

#xc_sim_name=$(OUT_DIR)/X$(DRIVER_NAME)
#xc_workdir=$(xc_sim_name).xcelium.d
#xc_run_tcl=$(xc_sim_name)_run.tcl

# /home/centos/chipyard-xcelium-wip/sims/firesim/sim/midas/src/main/cc/emul/dpi.cc

$(xc_sharedlib): $(xcelium_v) $(xcelium_cc) $(emul_h)
	mkdir -p $(OUT_DIR)
	rm -rf $(GEN_DIR)/$(DRIVER_NAME).csrc
	rm -rf $(OUT_DIR)/$(DRIVER_NAME).daidir
	g++ -shared -fPIC -o $(xc_sharedlib) $(CXXFLAGS) $(LDFLAGS) $(xcelium_cc) -I/home/centos/TEST_INSTALL_DIR/tools/include

$(xc_workdir): $(xcelium_v) $(xcelium_cc) $(emul_h) $(xc_sharedlib)
	mkdir -p $(OUT_DIR)
	rm -rf $(GEN_DIR)/$(DRIVER_NAME).csrc
	rm -rf $(OUT_DIR)/$(DRIVER_NAME).daidir
	xrun -elaborate $(xcelium_rtl_flags) $(xcelium_v) -Wld,-L$(OUT_DIR) -Wld,-lfiresim /home/centos/chipyard-xcelium-wip/sims/firesim/sim/midas/src/main/cc/emul/dpi.cc -Wcxx,-I/home/centos/chipyard-xcelium-wip/sims/firesim/sim/midas/src/main/cc

$(xc_run_tcl): $(xc_workdir)
	#echo "$$CAD_INFO_HEADER" > $(sim_run_tcl)
	echo "run" >> $(xc_run_tcl)
	echo "exit" >> $(xc_run_tcl)

$(xc_sim_name): $(xc_workdir) $(xc_run_tcl)
	echo "#!/usr/bin/env bash" > $(xc_sim_name)
	#echo "$$CAD_INFO_HEADER" >> $(sim)
	cat /home/centos/chipyard-xcelium-wip/sims/xcelium/arg-reshuffle >> $(xc_sim_name)
	echo "export LD_LIBRARY_PATH=/home/centos/chipyard-xcelium-wip/.conda-env/lib:\$$LD_LIBRARY_PATH" >> $(xc_sim_name)
	echo "LD_PRELOAD=/home/centos/chipyard-xcelium-wip/.conda-env/lib/libstdc++.so.6 xrun +permissive -R -input $(xc_run_tcl) $(XCELIUM_COMMON_ARGS) +permissive-off \$$INPUT_ARGS" >> $(xc_sim_name)
	chmod +x $(xc_sim_name)

#-gdb 


$(OUT_DIR)/$(DRIVER_NAME)-debug: $(xcelium_v) $(xcelium_cc) $(emul_h)
	mkdir -p $(OUT_DIR)
	rm -rf $(GEN_DIR)/$(DRIVER_NAME)-debug.csrc
	rm -rf $(OUT_DIR)/$(DRIVER_NAME)-debug.daidir
	$(XCELIUM) $(xcelium_rtl_flags) +define+DEBUG -o $@ $(xcelium_v) $(xcelium_cc)

################################################################################
