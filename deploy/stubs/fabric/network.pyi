from fabric.auth import get_password as get_password, set_password as set_password
from fabric.exceptions import NetworkError as NetworkError
from fabric.utils import handle_prompt_abort as handle_prompt_abort, warn as warn
from typing import Any
# TODO mypy doesn't seem to understand that paramiko is imported as ssh here
# so, I just import the types needed directly from paramiko instead of using ssh.Channel
# or whatever in the other modules
#import paramiko as ssh

msg: Any
ipv6_regex: Any

def direct_tcpip(client, host, port): ...
def is_key_load_error(e): ...
def get_gateway(host, port, cache, replace: bool = ...): ...

class HostConnectionCache(dict):
    def connect(self, key) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    def __contains__(self, key): ...

def ssh_config(host_string: Any | None = ...): ...
def key_filenames(): ...
def key_from_env(passphrase: Any | None = ...): ...
def parse_host_string(host_string): ...
def normalize(host_string, omit_port: bool = ...): ...
def to_dict(host_string): ...
def from_dict(arg): ...
def denormalize(host_string): ...
def join_host_strings(user, host, port: Any | None = ...): ...
def normalize_to_string(host_string): ...
def connect(user, host, port, cache, seek_gateway: bool = ...): ...
def prompt_for_password(prompt: Any | None = ..., no_colon: bool = ..., stream: Any | None = ...): ...
def needs_host(func): ...
def disconnect_all() -> None: ...
